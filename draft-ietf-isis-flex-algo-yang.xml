<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="no" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" 
  category="std" docName="draft-ietf-lsr-isis-flex-algo-yang-00" 
  ipr="trust200902" submissionType="IETF" xml:lang="en" 
  tocInclude="true" symRefs="true" sortRefs="true" 
  version="3" consensus="true">

  <front>
    <title abbrev="IS-IS ASLA and Flex-Algo YANG">YANG Model for IS-IS Application-Specific Link Attributes and Flexible Algorithm</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-lsr-isis-flex-algo-yang-00"/>
    <author fullname="Yingzhen Qu" initials="Y" surname="Qu">
      <organization>Futurewei Technologies</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>yingzhen.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Acee Lindem" initials="A." surname="Lindem">
      <organization>Arrcus, Inc.</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>acee.ietf@gmail.com</email>
      </address>
    </author>
    <author fullname="Madhavi Joshi" initials="M." surname="Joshi">
      <organization>Arrcus, Inc.</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>madhavi@arrcus.com</email>
      </address>
    </author>
    <date/>
    <area>General</area>
    <workgroup>Internet</workgroup>
    <abstract>
      <t>This document defines a YANG data model to support IS-IS Application-Specific
        Link Attributes and Flexible Algorithm.
      </t>
    </abstract>
  </front>
  <middle>
    <section numbered="true" toc="default">
      <name>Overview</name>
      <t>This document defines two YANG <xref target="RFC7950"/> data modules. 
        The first module is to provide support for configuration and 
        operational state for IS-IS Application-Specific Link Attributes 
        as defined in <xref target="RFC9479"/>, and the second module 
        is to support IS-IS Flexible Algorithm as defined in <xref target="RFC9350"/>.
        Both modules are augmenting the IETF IS-IS YANG model <xref target="RFC9130"/>.
      </t>

      <section numbered="true" toc="default">
        <name>Requirements Language</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119" format="default"/>.</t>
      </section>
    </section>

    <section numbered="true" toc="default">
      <name>YANG Module for IS-IS Application-Specific Link Attributes</name>
      <t>This document defined a YANG module for IS-IS Application-Specific Link Attributes
        as defined in <xref target="RFC9479"/>.</t>

      <artwork align="left" name="" type="" alt=""><![CDATA[
module: ietf-isis-link-attr
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/isis:isis:
    +--rw isis-link-attr-op
       +--rw (link-attr-op-mode)
          +--:(legacy)
          |  +--rw legacy?         empty
          +--:(transition)
          |  +--rw transition?     empty
          +--:(app-specific)
             +--rw app-specific?   empty
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/isis:isis/isis:interfaces
            /isis:interface:
    +--rw isis-asla
       +--rw interface-asla* [app-id]
          +--rw app-id                       uint16
          +--rw unidirectional-link-delay?   uint32
          +--rw metric-type?                 uint8
          +--rw metric?                      uint32
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/isis:isis/isis:database
            /isis:levels/isis:lsp/isis:extended-is-neighbor
            /isis:neighbor/isis:instances/isis:instance:
    +--ro asla-sub-tlvs
       +--ro asla-sub-tlv* []
          +--ro l-flag?         boolean
          +--ro sabm-length?    uint8
          +--ro r-flag?         boolean
          +--ro udabm-length?   uint8
          +--ro sabm
          |  +--ro sabm-bits*   identityref
          +--ro udabm
          +--ro unknown-tlvs
             +--ro unknown-tlv* []
                +--ro type?     uint16
                +--ro length?   uint16
                +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/isis:isis/isis:database
            /isis:levels/isis:lsp/isis:mt-is-neighbor/isis:neighbor
            /isis:instances/isis:instance:
    +--ro asla-sub-tlvs
       +--ro asla-sub-tlv* []
          +--ro l-flag?         boolean
          +--ro sabm-length?    uint8
          +--ro r-flag?         boolean
          +--ro udabm-length?   uint8
          +--ro sabm
          |  +--ro sabm-bits*   identityref
          +--ro udabm
          +--ro unknown-tlvs
             +--ro unknown-tlv* []
                +--ro type?     uint16
                +--ro length?   uint16
                +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/isis:isis/isis:database
            /isis:levels/isis:lsp:
    +--ro application-specific-srlg-tlv
       +--ro as-srlg-tlv* []
          +--ro neighbor-system-id?   isis:system-id
          +--ro pseudo-node-id?       uint8
          +--ro l-flag?               boolean
          +--ro sabm-length?          uint8
          +--ro r-flag?               boolean
          +--ro udabm-length?         uint8
          +--ro sabm
          |  +--ro sabm-bits*   identityref
          +--ro udabm
          +--ro length-of-sub-tlvs?   uint8
          +--ro link-id-sub-tlvs
          |  +--ro link-local-remote-ids
          |  |  +--ro link-local-id?    union
          |  |  +--ro link-remote-id?   union
          |  +--ro ipv4-interface-addr
          |  |  +--ro ipv4-int-addr?   inet:ipv4-address
          |  +--ro ipv4-neighbor-addr
          |  |  +--ro ipv4-neighbor-addr?   inet:ipv4-address
          |  +--ro ipv6-interface-addr
          |  |  +--ro ipv6-int-addr?   inet:ipv6-address
          |  +--ro ipv6-neighbor-addr
          |     +--ro ipv6-neighbor-addr?   inet:ipv6-address
          +--ro srlgs
             +--ro srlg*   uint32
]]></artwork>

<sourcecode name="ietf-isis-link-attr@2025-07-06.yang" type="" markers="true"><![CDATA[
module ietf-isis-link-attr {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-isis-link-attr";

  prefix isis-link-attr;

  import ietf-inet-types {
    prefix inet;
    reference
      "RFC 6991 - Common YANG Data Types";
  }

  import ietf-routing {
    prefix rt;
    reference
      "RFC 8349: A YANG Data Model for Routing
                 Management (NMDA Version)";
  }

  import ietf-isis {
    prefix isis;
    reference
      "RFC 9130: YANG Data Model for the IS-IS Protocol";
  }

  organization
    "IETF LSR - Link State Routing Working Group";

  contact
     "WG Web:   <https://datatracker.ietf.org/wg/lsr>
      WG List:  <mailto:lsr@ietf.org>

      Author:   Yingzhen Qu
                <mailto:yingzhen.ietf@gmail.com>
      Author:   Acee Lindem
                <mailto:acee.ietf@gmail.com>
      Author:   Stephane Litkowski
                <mailto:slitkows.ietf@gmail.com>
      Author:    Madhavi Joshi
               <madhavi@arrcus.com>
     ";

  description
    "This YANG module defines the configuration and operational
     state for IS-IS application specific link attributes feature as
     defined in RFC 9479.

     This YANG model conforms to the Network Management
     Datastore Architecture (NMDA) as described in RFC 8342.

     Copyright (c) 2025 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX;
     see the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  reference "RFC XXXX";

  revision 2025-07-06 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for IS-IS Application-Specific
       Link Attributes.";
  }

  identity sabm-bit {
    description
      "Base identity for sabm bits.";
    reference
      "RFC 8919: IS-IS Application-Specific Link Attributes";
  }

  identity rsvp-te-bit {
    base sabm-bit;
    description
      "R bit, RSVP-TE.";
  }

  identity sr-policy-bit {
    base sabm-bit;
    description
      "S bit, Segment Routing Policy.";
  }

  identity lfa-bit {
    base sabm-bit;
    description
      "F bit, Loop Free Alternate (LFA). Includes all LFA types.";
  }

  identity flex-algo-bit {
    base sabm-bit;
    description
      "X bit, flexible algorithm.";
    reference
      "RFC 9350: IGP Flexible Algorithm, Section 12.";
  }

  grouping application-identifier-bit-mask {
    description
      "Identification of the set of applications associated with
       link attribute advertisements";

    leaf l-flag {
      type boolean;
      description
        "Legacy Flag. When set, all of the applications
         specified in the bit mask MUST use the legacy
         advertisements.";
    }
    leaf sabm-length {
      type uint8;
      description
        "Standard Application Identifier Bit Mask Length in
         octets.";
    }
    leaf r-flag {
      type boolean;
      default false;
      description
        "Reserved.";
    }
    leaf udabm-length {
      type uint8;
      description
      "User Defined Application Identifier Bit Mask Length
      in octets.";
    }
    container sabm {
      leaf-list sabm-bits {
        type identityref {
          base sabm-bit;
        }
        description
          "SABM bits list. This list will contain
           identities for the bits which are set in the
           SABA bits.";
      }
      description
        "Standard Application Identifier Bit Mask.";
    }
    container udabm {
      description
        "User Defined Application Identifier Bit Mask.
         This container is to be augmented by user defined
         applications.";
    }
  }

  grouping application-specific-link-attributes-sub-tlv {
    description
      "Grouping for specification of the applications and
       application-specific attribute values.";

    container asla-sub-tlvs {
      list asla-sub-tlv {
        uses application-identifier-bit-mask;
        uses isis:unknown-tlvs;
        description
          "List of application specific link attributes sub-tlvs.";
      }
      description
        "Application specific link attributes sub-tlv.";
    }
  }

  grouping application-specific-srlg-tlv {
    description
      "Grouping of a TLV to advertise application-specific
       SRLGs for a given link.";
    container application-specific-srlg-tlv {
      list as-srlg-tlv {
        leaf neighbor-system-id {
          type isis:system-id;
          description
            "Neighbor System-ID.";
        }
        leaf pseudo-node-id {
          type uint8;
          description
            "Pseudo-node ID.";
        }
        uses application-identifier-bit-mask;
        leaf length-of-sub-tlvs {
          type uint8;
          description
            "Length of sub-tlvs.";
        }

        container link-id-sub-tlvs {
          description
            "Link Identifier sub-TLVs.";
          container link-local-remote-ids {
            description
              "Link local/remote identifier sub-tlv.";
            leaf link-local-id {
              type union {
                type inet:ipv4-address;
                type uint32;
              }
              description
                "Local identifier of the link.
                 It could be an IPv4 address or a local identifier.";
            }
            leaf link-remote-id {
              type union {
                type inet:ipv4-address;
                type uint32;
              }
              description
                "Remote identifier of the link.
                It could be an IPv4 address or a remotely learned
                identifier.";
            }
          }
          container ipv4-interface-addr {
            leaf ipv4-int-addr {
              type inet:ipv4-address;
              description
                "IPv4 address for the interface.";
            }
            description
              "IPv4 interface address sub-tlv.";
          }
          container ipv4-neighbor-addr {
            leaf ipv4-neighbor-addr {
              type inet:ipv4-address;
              description
                "IPv4 address for a neighboring router
                on this link.";
            }
            description
              "IPv4 neighbor address sub-tlv.";
          }
          container ipv6-interface-addr {
            leaf ipv6-int-addr {
              type inet:ipv6-address;
              description
                "IPv6 address for the interface.";
            }
            description
              "IPv6 interface address sub-tlv.";
          }
          container ipv6-neighbor-addr {
            leaf ipv6-neighbor-addr {
              type inet:ipv6-address;
              description
                "IPv6 address for a neighboring router
                on this link.";
            }
            description
              "IPv6 neighbor address sub-tlv.";
          }
        }

        container srlgs {
          description "List of SRLGs.";
          leaf-list srlg {
            type uint32;
            description
              "SRLG value of the link.";
          }
        }

        description
          "List of application specific SRLG tlvs.";
      }
      description
        "Application specific SRLG tlv.";
    }
  }

  /* Configuration */
  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol configuration
       with application specific link attributes.";

    container isis-link-attr-op {
      choice link-attr-op-mode {
        mandatory "true";
        leaf legacy {
          type empty;
          description
            "Only send legacy advertisements.";
        }
        leaf transition {
          type empty;
          description
            "Send both application-specific and legacy
            advertisements.";
        }
        leaf app-specific{
          type empty;
          description
            "Only send application-specific advertisements.";
        }
        description
          "Link attributes mode";
      }

      description
        "Link attributes operation mode.";
    }
  }

  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis/isis:interfaces/isis:interface" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/"+
         "rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used.";
    }
    description
      "This augments ISIS interface configuration
       with application specific link attributes.";

    container isis-asla {
      list interface-asla {
        key app-id;

        leaf app-id {
          type uint16 {
            range "0 .. 1023";
          }
          description
            "Application ID.
             0 - RSVP TE. 1 - Segment Routing Policy.
             2 - Loop-Free Alternate.";
        }

        leaf unidirectional-link-delay {
            type uint32 {
              range "0 .. 16777215";
            }
            description
              "This 24-bit field carries the average link delay in
               microseconds.";
        }

        leaf metric-type {
          type uint8;
          description
            "IGP metric type.";
        }

        leaf metric {
          type uint32 {
            range "1 .. 16777215";
          }
          description
            "metric value.";
        }

        description
          "ASLA interface configuration.";
      }
      description
        "Application specific link attributes configuration.";
    }
  }

  /* TLV 22 */
  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis/isis:database/isis:levels/isis:lsp"+
          "/isis:extended-is-neighbor/isis:neighbor"+
          "/isis:instances/isis:instance" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB TLV22.";

    uses application-specific-link-attributes-sub-tlv;
  }

  /* TLV 223 */
  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis/isis:database/isis:levels/isis:lsp"+
          "/isis:mt-is-neighbor/isis:neighbor"+
          "/isis:instances/isis:instance" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB TLV223.";

       uses application-specific-link-attributes-sub-tlv;
  }

  /* application-specific SRLG TLV 238 */
  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis/isis:database/isis:levels/isis:lsp" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB.";

    uses application-specific-srlg-tlv;
  }
}
        ]]></sourcecode>
    </section>

    <section numbered="true" toc="default">
      <name>YANG Module for IS-IS Flexible Algorithm</name>
      <t>This section defines the YANG module for IS-IS Flexible Algorithm.
        The module uses the identities defined in the IANA-maintained YANG
        modules for IGP Algorithm Types <xref target="IANA-IGP-ALGO-Types"/>
        and IGP Metric Type <xref target="IANA-IGP-Metric-Types"/>
        in <xref target="I-D.ietf-lsr-ospf-flex-algo-yang"/>. </t>
      <artwork align="left" name="" type="" alt=""><![CDATA[
module: ietf-isis-flex-algo
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/isis:isis:
    +--rw isis-flex-algo
       +--rw flex-algo* [algo-number]
          +--rw algo-number             uint8
          +--rw advertise-definition?   boolean
          +--rw admin-groups
          |       {te-types:extended-admin-groups,
          |        te-types:named-extended-admin-groups}?
          |  +--rw exclude-admin-groups*       leafref
          |  +--rw include-any-admin-groups*   leafref
          |  +--rw include-all-admin-groups*   leafref
          +--rw exclude-srlgs*
          |       -> /te:te/globals/named-srlgs/named-srlg/name
          |       {te-types:named-srlg-groups}?
          +--rw metric-type?            identityref
          +--rw calc-type?              identityref
          +--rw prefix-metric!
          +--rw priority?               uint8
  augment /rt:routing/rt:control-plane-protocols
              /rt:control-plane-protocol/isis:isis
              /isis:database/isis:levels/isis:lsp
              /isis:router-capabilities:
    +--ro fad-tlvs
       +--ro fad-tlv* []
          +--ro flex-algo?              uint8
          +--ro metric-type?            identityref
          +--ro calc-type?              identityref
          +--ro priority?               uint8
          +--ro fa-ex-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-any-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-all-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fad-flags-sub-tlv
          |  +--ro fad-flags*   identityref
          +--ro fa-ex-srlg-sub-tlv
          |  +--ro srlgs*   uint32
          +--ro unknown-tlvs
             +--ro unknown-tlv* []
                +--ro type?     uint16
                +--ro length?   uint16
                +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis
          /isis:database/isis:levels/isis:lsp
          /isis:extended-ipv4-reachability/isis:prefixes:
    +--ro fapm-sub-tlvs
       +--ro fapm-sub-tlv* []
          +--ro flex-algo?   uint8
          +--ro metric?      uint32
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis
          /isis:database/isis:levels/isis:lsp
          /isis:mt-extended-ipv4-reachability/isis:prefixes:
    +--ro fapm-sub-tlvs
       +--ro fapm-sub-tlv* []
          +--ro flex-algo?   uint8
          +--ro metric?      uint32
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis
          /isis:database/isis:levels/isis:lsp
          /isis:ipv6-reachability/isis:prefixes:
    +--ro fapm-sub-tlvs
       +--ro fapm-sub-tlv* []
          +--ro flex-algo?   uint8
          +--ro metric?      uint32
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/isis:isis
          /isis:database/isis:levels/isis:lsp
          /isis:mt-ipv6-reachability/isis:prefixes:
    +--ro fapm-sub-tlvs
       +--ro fapm-sub-tlv* []
          +--ro flex-algo?   uint8
          +--ro metric?      uint32

  notifications:
    +---n flex-algo-not-supported
       +--ro routing-protocol-name?   leafref
       +--ro isis-level?              level
       +--ro flex-algo-number?        uint8  
      ]]></artwork>
<sourcecode name="ietf-isis-flex-algo@2025-07-06.yang" type="yang" markers="true"><![CDATA[
module ietf-isis-flex-algo {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-isis-flex-algo";
  prefix isis-flex-algo;

  import ietf-routing {
    prefix rt;
    reference "RFC 8349: A YANG Data Model for Routing
              Management (NMDA Version)";
  }

  import ietf-te-types {
    prefix te-types;
    reference "RFC8776: Common YANG Data Types for 
               Traffic Engineering.";
  }

  import ietf-isis {
    prefix isis;
    reference
      "RFC 9130: YANG Data Model for the IS-IS Protocol";
  }

  import ietf-te {
    prefix te;
  }

  import iana-igp-algo-types {
     prefix iana-algo-types;
  }

  import iana-igp-metric-types {
    prefix iana-metric-type;
  }

  organization
    "IETF LSR - Link State Routing Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/lsr>
     WG List:  <mailto:spring@ietf.org>


     Author:    Yingzhen Qu
               <mailto:yingzhen.ietf@gmail.com>
     Author:    Acee Lindem
               <mailto:acee.ietf@gmail.com>
     Author:    Stephane Litkowski
               <mailto:slitkows.ietf@gmail.com>
     Author:    Madhavi Joshi
               <madhavi@arrcus.com>
    ";

  description
    "The YANG module defines the configuration and operational
     state for ISIS Flexible Algorithm as defined in  RFC 9350.

     This YANG model conforms to the Network Management
     Datastore Architecture (NMDA) as described in RFC 8342.

     Copyright (c) 2025 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Revised BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX;
     see the draft itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";


  reference
    "RFC XXXX: YANG Data Model for ISIS Flexible Algorithm.";

  revision 2025-07-06 {
    description
      "Initial Version";
    reference
       "RFC XXXX: YANG Data Model for ISIS Flexible Algorithm.";
  }

  /* Identities */

  identity fad-flags {
    description
      "Base identity for ISIS FAD flags.";
  }

  identity m-bit {
    base fad-flags;
    description
      "M bit, when set, the flex-algo specific prefix and ASBR
       metric MUST be used for inter-area and external prefix
       calculation.";
  }

  /* Groupings */
  grouping fa-ex-ag-sub-tlv {
    container fa-ex-ag-sub-tlv {
      leaf-list extended-admin-groups {
        type uint64;
        description
          "Extended administrative group as defined in RFC 7308.";
      }
      description
        "The flex-algo exclude admin group sub-tlv.";
    }
    description
      "The flex-algo exclude admin group sub-tlv.";
  }

  grouping fa-in-any-ag-sub-tlv {
    container fa-in-any-ag-sub-tlv {
      leaf-list extended-admin-groups {
        type uint64;
        description
          "Extended administrative group as defined in RFC 7308.";
      }
      description
        "The flex-algo include-any admin group sub-tlv.";
    }
    description
      "The flex-algo include-any admin group sub-tlv.";
  }

  grouping fa-in-all-ag-sub-tlv {
    container fa-in-all-ag-sub-tlv {
      leaf-list extended-admin-groups {
        type uint64;
        description
          "Extended administrative group as defined in RFC 7308.";
      }
      description
        "The flex-algo include-all admin group sub-tlv.";
    }
    description
      "The flex-algo include-all admin group sub-tlv.";
  }

  grouping fad-flags-sub-tlv {
    container fad-flags-sub-tlv {
      leaf-list fad-flags {
        type identityref {
          base fad-flags;
        }
        description
          "Flex-algo definition flags list.";
      }
      description
        "ISIS flex-algo definition flags.";
    }
    description
      "The flex-algo definition flags sub-tlv.";
  }

  grouping fa-ex-srlg-sub-tlv {
    container fa-ex-srlg-sub-tlv {
      leaf-list srlgs {
        type uint32;
        description
          "SRLG value as defined in  RFC 4203.";
      }
      description
        "The flex-algo exclude SRLG sub-tlv.";
    }
    description
      "The flex-algo exclude SRLG sub-tlv.";
  }

  grouping fad-tlvs {
    container fad-tlvs {
      list fad-tlv {
        leaf flex-algo {
          type uint8;
          description
            "Flex-algo number, value between 128 and 255 inclusive.";
        }
        leaf metric-type {
          type identityref {
            base iana-metric-type:metric-type;
          }
            description
              "Type of metric to be used during the calculation.";
        }
        leaf calc-type {
          type identityref {
            base iana-algo-types:algo-type;
          }
          description
            "IGP algorithm types, value from 0 to 127 as
            defined under 'Interior Gateway Protocol (IGP)
            Parameter' by IANA.";
        }
        leaf priority {
          type uint8;
            description
              "Priority of the advertisement.";
        }

        uses fa-ex-ag-sub-tlv;
        uses fa-in-any-ag-sub-tlv;
        uses fa-in-all-ag-sub-tlv;
        uses fad-flags-sub-tlv;
        uses fa-ex-srlg-sub-tlv;
        uses isis:unknown-tlvs;

        description
          "List of flex-algo definition TLVs.";
      }
      description
        "ISIS Flexible Algorithm Definition TLV.";
    }
    description
      "ISIS Flexible Algorithm Definition (FAD) TLV.";
  }

  grouping fapm-sub-tlvs {
    container fapm-sub-tlvs {
      list fapm-sub-tlv {
        leaf flex-algo {
          type uint8;
          description
            "Flex-algo number, value between 128 and 255
             inclusive.";
        }
        leaf metric {
          type uint32;
          description
            "Prefix metric.";
        }
        description
          "List of flex-algo prefix sub-tlvs.";
      }
      description
        "Flex-algo prefix metric sub-tlvs.";
    }
    description
      "Flexible Algorithm Prefix Metric (FAPM) sub TLVs.";
  }


  /* Configurations */

  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis" {
    when "/rt:routing/rt:control-plane-protocols/"+
                 "rt:control-plane-protocol/rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol configuration
       with flexible algorithm.";

    container isis-flex-algo {
      list flex-algo {
        key "algo-number";

        leaf algo-number {
          type uint8 {
            range "128..255";
          }
          description
            "An identifier in the range 128-255 that's associated
            with the Flexible Algorithm Definition.";
        }

        leaf advertise-definition {
          type boolean;
          default true;
          description
            "Enable to advertise the flex-algo definition.";
        }

        container admin-groups {
          if-feature "te-types:extended-admin-groups";
          if-feature "te-types:named-extended-admin-groups";
          leaf-list exclude-admin-groups {
            type leafref {
              path "/te:te/te:globals/te:named-admin-groups/"
                 + "te:named-admin-group/te:name";
            }
            description
              "Exclude rule used during the flex-algo
              path computation.";
          }
          leaf-list include-any-admin-groups {
            type leafref {
              path "/te:te/te:globals/te:named-admin-groups/"
                 + "te:named-admin-group/te:name";
            }
            description
              "Include-any rule used during the flex-algo
              path computation.";
          }
          leaf-list include-all-admin-groups {
            type leafref {
              path "/te:te/te:globals/te:named-admin-groups/"
                 + "te:named-admin-group/te:name";
            }
            description
              "Include-all rule used during the flex-algo
              path computation.";
          }
          description
            "Specify links for the flex-algo path computation.";
        }

        leaf-list exclude-srlgs {
          if-feature "te-types:named-srlg-groups";
          type leafref {
            path "/te:te/te:globals/te:named-srlgs/te:named-srlg/"
               + "te:name";
          }
          description
            "Shared Risk Link Groups (SRLGs) to be excluded during
            the flex-algo path computation.";
        }

        leaf metric-type {
          type identityref {
            base iana-metric-type:metric-type;
          }
          description
            "Type of metric to be used during the calculation.";
        }

        leaf calc-type {
          type identityref {
            base iana-algo-types:algo-type;
          }
          default iana-algo-types:algo-spf;
          description
            "Calcuation-type. Value from 0-127 inclusive from the 
            IANA 'IGP Algorithm Types' registry defined under the 
            'Interior Gateway Protocol (IGP) Parameters' registry.";
        }

        container prefix-metric {
          presence
            "Use flex-algo specific prefix metric.";
          description
            "Use flex-algo prefix metric.";
        }

        leaf priority {
          type uint8;
          description
            "Priority of the advertisement.";
        }

        description
          "List of flex-algo configurations.";
      }
      description
        "Flexible Algorithm configuration.";
    }
  }

  /* Database */

  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis/isis:database/isis:levels/isis:lsp"+
          "/isis:router-capabilities" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/"+
         "rt:type = 'isis:isis'" {
    description
      "This augment ISIS routing protocol when used";
    }
    description
      "This augments ISIS protocol LSDB router capability.";

    uses fad-tlvs;
  }

  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis/isis:database/isis:levels/isis:lsp"+
          "/isis:extended-ipv4-reachability/"+
          "isis:prefixes" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/"+
         "rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used";
    }
      description
        "This augments ISIS protocol LSDB prefix.";
         uses fapm-sub-tlvs;
  }

  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis/isis:database/isis:levels/isis:lsp"+
          "/isis:mt-extended-ipv4-reachability/isis:prefixes" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/"+
         "rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used";
    }
      description
        "This augments ISIS protocol LSDB prefix.";
         uses fapm-sub-tlvs;
  }

  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis/isis:database/isis:levels/isis:lsp"+
                      "/isis:ipv6-reachability/isis:prefixes" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/"+
         "rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used";
    }
      description
        "This augments ISIS protocol LSDB prefix.";
         uses fapm-sub-tlvs;
  }

  augment "/rt:routing/" +
          "rt:control-plane-protocols/rt:control-plane-protocol"+
          "/isis:isis/isis:database/isis:levels/isis:lsp"+
                      "/isis:mt-ipv6-reachability/isis:prefixes" {
    when "/rt:routing/rt:control-plane-protocols/"+
         "rt:control-plane-protocol/"+
         "rt:type = 'isis:isis'" {
      description
        "This augment ISIS routing protocol when used";
    }
      description
        "This augments ISIS protocol LSDB prefix.";
         uses fapm-sub-tlvs;
  }

  /* notification */

  notification flex-algo-not-supported {
    uses isis:notification-instance-hdr;
    leaf flex-algo-number {
      type uint8 {
        range "128..255";
      }
      description
        "Flex-algo identifier which is not supported by the IS-IS
         instance.";
    }
    description
      "This notification is sent when an IS-IS instance does not
       support this flex-algo.";
  }
}
]]></sourcecode>
    </section>

    <section anchor="Security" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>The YANG modules specified in this document define a schema for
       data that is designed to be accessed via network
       management protocols such as 
       NETCONF <xref target="RFC6241" format="default"/> or
       RESTCONF <xref target="RFC8040" format="default"/>. 
       The lowest NETCONF layer is the secure transport
       layer, and the mandatory-to-implement secure transport is 
       Secure Shell (SSH) <xref target="RFC6242" format="default"/>. 
       The lowest RESTCONF layer is HTTPS, and the
       mandatory-to-implement secure transport is 
       TLS <xref target="RFC8446" format="default"/>.</t>
      <t>The NETCONF access control model 
      <xref target="RFC8341" format="default"/>
       provides the means to restrict access for particular NETCONF
       or RESTCONF users to a pre-configured subset of all available 
       NETCONF or RESTCONF protocol operations and content.</t>
      <t>There are a number of data nodes defined in the modules
      that are writable/creatable/deletable 
      (i.e., config true, which is the default).
      These data nodes may be considered sensitive or vulnerable
      in some network environments.
      Write operations (e.g., edit-config) to these data nodes without
      proper protection can have a negative effect on network operations. </t>
      <t>Some of the readable data nodes in the modules
      may be considered sensitive or vulnerable in some network environments. It is thus
      important to control read access (e.g., via get, get-config, or notification)
      to these data nodes. The exposure of the Link State Database (LSDB) will
      expose the detailed topology of the network. This may be undesirable since
      both due to the fact that exposure may facilitate other attacks. Additionally,
      network operators may consider their topologies to be sensitive confidential
      data.</t>
    </section>
    <section numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document registers a URI in the IETF XML registry
        <xref target="RFC3688" format="default"/>.  Following the format in <xref target="RFC3688" format="default"/>,
        the following registrations are requested:
      </t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
   URI: urn:ietf:params:xml:ns:yang:ietf-isis-link-attr
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   ]]></artwork>
      <artwork name="" type="" align="left" alt=""><![CDATA[
URI: urn:ietf:params:xml:ns:yang:ietf-isis-flex-algo
Registrant Contact: The IESG.
XML: N/A, the requested URI is an XML namespace.
      ]]></artwork>
      <t>This document registers the YANG module in the YANG Module Names
        registry <xref target="RFC7950" format="default"/>.
      </t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
   name: ietf-isis-link-attr
   Maintained by IANA?  N
   namespace: urn:ietf:params:xml:ns:yang:ietf-isis-link-attr
   prefix: isis-link-attr
   reference: RFC XXXX
   ]]></artwork>
      <artwork name="" type="" align="left" alt=""><![CDATA[
name: ietf-isis-flex-algo
Maintained by IANA?  N
namespace: urn:ietf:params:xml:ns:yang:ietf-isis-flex-algo
prefix: isis-flex-algo
reference: RFC XXXX
      ]]></artwork>
    </section>
    <section anchor="Acknowledgements" numbered="true" toc="default">
      <name>Acknowledgements</name>
      <t>This document was produced using Marshall Rose's xml2rfc tool.</t>
      <t>The YANG model was developed using the suite of YANG tools written
         and maintained by numerous authors.</t>
    </section>
  </middle>

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references>
      <name>Normative References</name>
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3688.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6242.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7950.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8040.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8341.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8349.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9130.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9350.xml"/>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9479.xml"/>
      <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-lsr-ospf-flex-algo-yang.xml"/>
      <reference anchor="IANA-IGP-ALGO-Types" target="https://www.iana.org/assignments/igp-parameters" quoteTitle="true" derivedAnchor="IANA-IGP-ALGO-Types">
          <front>
            <title>IGP Algorithm Types</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
      <reference anchor="IANA-IGP-Metric-Types" target="https://www.iana.org/assignments/igp-parameters" quoteTitle="true" derivedAnchor="IANA-IGP-Metric-Types">
          <front>
            <title>IGP Metric-Type</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="IANA-YANG-Parameters" target="https://www.iana.org/assignments/yang-parameters" quoteTitle="true" derivedAnchor="IANA-YANG-Parameters">
          <front>
            <title>YANG Module Names</title>
            <author>
              <organization showOnFrontPage="true">IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
    </references>
    <references>
      <name>Informative References</name>
      <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8792.xml"/>
    </references>
    <section numbered="false" toc="default">
      <name>Appendix A. Example IS-IS Flex-Algo Configuration</name>
      <t>
        The following is an example configuration for 
        IS-IS Flexible Algorithm using the YANG model defined in this document.
      </t>
      <t>
        Note: '\' line wrapping per <xref target="RFC8792"/>.</t>
      <artwork name="Example IS-IS Flex-Algo Configuration" type="xml" align="left" alt=""><![CDATA[
<routing xmlns="urn:ietf:params:xml:ns:yang:ietf-routing">
  <control-plane-protocols>
    <control-plane-protocol>
      <type>isis:isis</type>
      <name>default</name>
      <isis xmlns="urn:ietf:params:xml:ns:yang:ietf-isis">
        <isis-flex-algo
            xmlns="urn:ietf:params:xml:ns:yang:ietf-isis-flex-algo">
          <flex-algo>
            <algo-number>128</algo-number>
            <advertise-definition>true</advertise-definition>
            <admin-groups>
              <exclude-admin-groups>red</exclude-admin-groups>
              <include-any-admin-groups>blue</include-any-admin-groups>
              <include-all-admin-groups>green</include-all-admin-groups>
            </admin-groups>
            <exclude-srlgs>SRLG1</exclude-srlgs>
            <metric-type>iana-metric-type:igp-metric</metric-type>
            <calc-type>iana-algo-types:algo-spf</calc-type>
            <prefix-metric/>
            <priority>10</priority>
          </flex-algo>
        </isis-flex-algo>
      </isis>
    </control-plane-protocol>
  </control-plane-protocols>
</routing>
      ]]></artwork>
    </section>
    <section numbered="false" toc="default">
      <name>Appendix B. Example IS-IS Flex-Algo Configuration (JSON)</name>
      <t>
        The following is an example configuration for IS-IS 
        Flexible Algorithm in JSON format using the YANG model 
        defined in this document.
      </t>
      <artwork name="Example IS-IS Flex-Algo Configuration (JSON)" type="json" align="left" alt=""><![CDATA[
{
  "ietf-routing:routing": {
    "control-plane-protocols": {
      "control-plane-protocol": [
        {
          "type": "ietf-isis:isis",
          "name": "default",
          "ietf-isis:isis": {
            "ietf-isis-flex-algo:isis-flex-algo": {
              "flex-algo": [
                {
                  "algo-number": 128,
                  "advertise-definition": true,
                  "admin-groups": {
                    "exclude-admin-groups": ["red"],
                    "include-any-admin-groups": ["blue"],
                    "include-all-admin-groups": ["green"]
                  },
                  "exclude-srlgs": ["SRLG1"],
                  "metric-type": "iana-metric-type:igp-metric",
                  "calc-type": "iana-algo-types:algo-spf",
                  "prefix-metric": {},
                  "priority": 10
                }
              ]
            }
          }
        }
      ]
    }
  }
}
      ]]></artwork>
    </section>
  </back>
</rfc> 